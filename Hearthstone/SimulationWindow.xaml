<Window x:Class="Hearthstone.SimulationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Hearthstone Simulator" 
        Height="1000" 
        MinHeight="900"
        Width="1300"
        MinWidth="1200"
        FontSize="20">
    <DockPanel>
        <Grid DockPanel.Dock="Top" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="500" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.6*"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="0.6*"/>
            </Grid.RowDefinitions>
            
            <ListBox x:Name="SelectableCardsHack" ItemsSource="{Binding SelectableCards}" Visibility="Collapsed"/>
            
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
  <!--              <Label Content="My mana:" HorizontalAlignment="Left"/>
                <Label x:Name="P1Mana" Content="{Binding P1ManaTest}" Margin="0,0,20,0"/>
                <Label x:Name="label" Content="My hitpoints:" />
                <Label x:Name="label1" Content="{Binding P1Hitpoints, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,100,0"/>
-->
                <Label Content="Opponent mana:"/>
                <Label x:Name="P2Mana" Content="{Binding P2ManaTest}" Margin="0,0,20,0"/>
                <ListBox x:Name="Player1Avatar" DockPanel.Dock="Top" VerticalAlignment="Stretch"
                         ItemsSource="{Binding OpponentAvatarTest}" SelectionChanged="SelectableCards_SelectionChanged"
                         IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window }}, Path=isPlayer1Turn}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="{Binding Converter={StaticResource ElementToSelectabilityConverter}, ConverterParameter={x:Reference Name=SelectableCardsHack} }"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                            </MultiTrigger>
                                            <Trigger Property="Focusable" Value="false">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                            <Trigger Property="Focusable" Value="true">
                                                <Setter Property="Background" Value="LightGray"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Label x:Name="label2" Content="Opponent hitpoints:"/>
                <Label x:Name="label3" Content="{Binding P2Hitpoints, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Opponent hand:" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Opponent field:"  VerticalAlignment="Center"/>

            <ListBox x:Name="P1Hand" Grid.Row="1" Grid.Column="1" Margin="2" VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Stretch"
                         ItemsSource="{Binding P1Hand}" SelectionChanged="SelectableCards_SelectionChanged" LostFocus="PHand_LostFocus"
                         IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window }}, Path=isPlayer1Turn}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10" Text="{Binding}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="{Binding Converter={StaticResource ElementToSelectabilityConverter}, ConverterParameter={x:Reference Name=SelectableCardsHack} }"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                        </MultiTrigger>
                                        <Trigger Property="Focusable" Value="false">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="Focusable" Value="true">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <ListBox x:Name="P1Field" Grid.Row="2" Grid.Column="1" Margin="2" VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" SelectionChanged="SelectableCards_SelectionChanged"
                         ItemsSource="{Binding P1Field}" IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window }}, Path=isPlayer1Turn}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10" Text="{Binding}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="{Binding Converter={StaticResource ElementToSelectabilityConverter}, ConverterParameter={x:Reference Name=SelectableCardsHack} }"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                        </MultiTrigger>
                                        <Trigger Property="Focusable" Value="false">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="Focusable" Value="true">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>


            <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Label Content="My mana:" HorizontalAlignment="Left"/>
                <Label x:Name="P1Mana" Content="{Binding P1ManaTest}" Margin="0,0,20,0"/>
                <ListBox x:Name="Player0Avatar" DockPanel.Dock="Top" VerticalAlignment="Stretch"
                         ItemsSource="{Binding Player0Avatar}" SelectionChanged="SelectableCards_SelectionChanged" IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window }}, Path=isPlayer0Turn}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="{Binding Converter={StaticResource ElementToSelectabilityConverter}, ConverterParameter={x:Reference Name=SelectableCardsHack} }"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                            </MultiTrigger>
                                            <Trigger Property="Focusable" Value="false">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                            <Trigger Property="Focusable" Value="true">
                                                <Setter Property="Background" Value="LightGray"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Label x:Name="label" Content="My hitpoints:" />
                <Label x:Name="label1" Content="{Binding P1Hitpoints, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,100,0"/>
<!--
                <Label Content="Opponent mana:"/>
                <Label x:Name="P2Mana" Content="{Binding P2ManaTest}" Margin="0,0,20,0"/>
                <Label x:Name="label2" Content="Opponent hitpoints:"/>
                <Label x:Name="label3" Content="{Binding P2Hitpoints, UpdateSourceTrigger=PropertyChanged}"/>-->
            </StackPanel>


            <TextBlock Grid.Row="3" Grid.Column="0" Text="My hand:" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="4" Grid.Column="0" Text="My field:"  VerticalAlignment="Center"/>

            <ListBox x:Name="P0Hand" Grid.Row="3" Grid.Column="1" Margin="2" VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Stretch"
                         IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window }}, Path=isPlayer0Turn}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"
                         ItemsSource="{Binding P0Hand}" SelectionChanged="SelectableCards_SelectionChanged" LostFocus="PHand_LostFocus">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10" Text="{Binding}"  />
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="{Binding Converter={StaticResource ElementToSelectabilityConverter}, ConverterParameter={x:Reference Name=SelectableCardsHack} }"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>
                                            
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>
                                            
                                        </MultiTrigger>
                                        <Trigger Property="Focusable" Value="false">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="Focusable" Value="true">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <ListBox x:Name="P0Field" Grid.Row="4" Grid.Column="1" Margin="2" VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                         ItemsSource="{Binding P0Field}" IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window }}, Path=isPlayer0Turn}" SelectionChanged="SelectableCards_SelectionChanged">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10" Text="{Binding}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="{Binding Converter={StaticResource ElementToSelectabilityConverter}, ConverterParameter={x:Reference Name=SelectableCardsHack} }"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Red"/>

                                        </MultiTrigger>
                                        <Trigger Property="Focusable" Value="false">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="Focusable" Value="true">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>

        <Grid DockPanel.Dock="Top" Margin="0,10,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" Margin="10,0,10,0">
                <TextBlock DockPanel.Dock="Top" Text="Playable cards" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                <ListBox x:Name="SelectableCards" DockPanel.Dock="Top" VerticalAlignment="Stretch"
                         ItemsSource="{Binding SelectableCards}" SelectionChanged="SelectableCards_SelectionChanged"/>
            </DockPanel>
            <DockPanel Grid.Column="1" Margin="10,0,10,0">
                <TextBlock DockPanel.Dock="Top" Text="Card details" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                <Label x:Name="MyCard" DockPanel.Dock="Top"
                       BorderBrush="{Binding ElementName=SelectableCards, Path=BorderBrush}" 
                       BorderThickness="{Binding ElementName=SelectableCards, Path=BorderThickness}"
                       Content="{Binding ElementName=SelectableCards, Path=SelectedValue, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CardToStringConverter}}"/>
            </DockPanel>
            <DockPanel Grid.Column="2" Margin="10,0,10,0">
                <TextBlock DockPanel.Dock="Top" Text="Possible targets" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                <ListBox x:Name="ValidTargets" DockPanel.Dock="Top" VerticalAlignment="Stretch"
                         ItemsSource="{Binding ValidTargets}" SelectionChanged="ValidTargets_SelectionChanged"/>
            </DockPanel>
            <DockPanel Grid.Column="3" Margin="10,0,10,0">
                <TextBlock DockPanel.Dock="Top" Text="Target details" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                <Label x:Name="MyCardFromField" DockPanel.Dock="Top"
                       BorderBrush="{Binding ElementName=SelectableCards, Path=BorderBrush}" 
                       BorderThickness="{Binding ElementName=SelectableCards, Path=BorderThickness}"
                       Content="{Binding ElementName=ValidTargets, Path=SelectedValue, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CardToStringConverter}}"/>
            </DockPanel>
            <DockPanel Grid.Column="4" Margin="10,0,10,0">
                <Button DockPanel.Dock="Top" Margin="0,40,0,10" Width="150" Height="70" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="Confirm" Content="Confirm" Click="Button_Click_3" IsEnabled="False"/>
                <Button DockPanel.Dock="Top" Width="150" Height="70" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="EOTbutt" Content="END TURN" Click="Button_Click_1"/>
                <Button DockPanel.Dock="Top" Margin="0,0,0,10" Width="150" Height="70" HorizontalAlignment="Center" VerticalAlignment="Bottom" Content="Quit" Click="Button_Click"/>
            </DockPanel>
        </Grid>
    </DockPanel>
</Window>